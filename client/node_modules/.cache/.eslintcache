[{"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/index.js":"1","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/reportWebVitals.js":"2","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/App.js":"3","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/About.js":"4","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Contact.js":"5","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Home.js":"6","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js":"7","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/imagesData.js":"8"},{"size":500,"mtime":1643951033359,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1643951033359,"results":"11","hashOfConfig":"10"},{"size":2585,"mtime":1644464201146,"results":"12","hashOfConfig":"10"},{"size":1535,"mtime":1644924192913,"results":"13","hashOfConfig":"10"},{"size":3328,"mtime":1643857889787,"results":"14","hashOfConfig":"10"},{"size":5023,"mtime":1644387828461,"results":"15","hashOfConfig":"10"},{"size":7262,"mtime":1644923996622,"results":"16","hashOfConfig":"10"},{"size":469,"mtime":1644923314974,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"bupuho",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/index.js",[],[],["49","50"],"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/reportWebVitals.js",[],[],"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/App.js",["51","52","53","54"],[],"import './App.css'\nimport { \n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\nimport Home from './components/Home'\nimport About from './components/About'\nimport Portfolio from './components/Porfolio'\nimport Contact from './components/Contact'\n\nimport HomeIcon from './home-outline.svg'\nimport igIcon from './logo-instagram.svg'\n\nconst App = () => {\n\n  /* States */\n\n  /* useEffect */\n\n  /* Utility functions */\n\n  return (\n    <div className=\"App\">\n      <div className='main-container'>\n        <div className='header'>\n          <div className='logo'>\n            <div className='text'>\n              <h3>lorenzo</h3>\n            </div>\n            <div className='underline'>\n              <div className='line-1'/>\n              <div className='line-2'/>\n            </div>\n          </div>\n          <div className='nav-container'>\n            <div className='navigation'>\n              <div className='nav-btn'>\n                <a href='/about'>About</a>\n                <div className='animated-underline' />\n              </div>\n              <div className='nav-btn'>\n                <a href='https://github.com/roadarloceo?tab=repositories' target='__blank' rel='noopener noreferrer'>GitHub</a>\n                <div className='animated-underline' />\n              </div>\n              <div className='nav-btn'>\n                <a href='/portfolio'>Portfolio</a>\n                <div className='animated-underline' />\n              </div>\n              <a href='/contact' className='contact-anchor nav-btn'>Contact</a>\n            </div>\n          </div>\n          <a href='/' className='home-anchor'>\n            <img\n              src={HomeIcon}\n              className='home-icon'\n            />\n          </a>\n        </div>\n        <div>\n          <BrowserRouter>\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/about' element={<About />} />\n              <Route path='/portfolio' element={<Portfolio />} />\n              <Route path='/contact' element={<Contact />} />\n            </Routes> \n          </BrowserRouter>  \n        </div>\n        <div className='footer'>\n          <p>Lorenzo De Los Reyes</p>\n          <a href='https://www.instagram.com/lorenzodeveloper/' target='__blank'>\n            <img\n              src={igIcon}\n              alt='instagram logo'\n              className='ig-logo'\n            />\n            <div className='animated-underline' />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App",["55","56"],"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/About.js",[],[],"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Contact.js",["57"],[],"import './Contact.css'\nimport Copy from '../copy-outline.svg'\n\nconst Contact = props => {\n\n    const apiUrl = 'https://lorenzo-api.herokuapp.com'\n\n    const copyToClipboard = () => {\n        const email = document.querySelector('.contact').querySelector('.email')\n        const success = document.querySelector('.contact').querySelector('.clipboard-success')\n\n        navigator.clipboard.writeText(email.innerHTML)\n        success.classList.add('slideFromTop')\n        setTimeout(() => success.classList.remove('slideFromTop'), 5001)\n    }\n    const handleFormSubmit = () => {\n        const masterNode = document.querySelector('.contact').querySelector('form')\n        const email = masterNode.querySelectorAll('input')[0].value\n        const subject = masterNode.querySelectorAll('input')[1].value\n        const message = masterNode.querySelector('textarea').value\n        const error = masterNode.querySelector('.error')\n        const error2 = masterNode.querySelector('.error-2')\n        const success = masterNode.querySelector('.success')\n\n        if ( !email || !subject || !message ) {\n            error.style.display = 'block'\n            setTimeout(() => error.style.display = 'none', 5000)\n        } else {\n            fetch(`${apiUrl}/client/client-inquiry`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                mode: 'cors',\n                body: JSON.stringify({\n                    sender: email,\n                    subject: subject,\n                    body: message\n                })\n            })\n                .then( () => {\n                    success.style.display = 'block'\n                    masterNode.reset()\n                    setTimeout(() => success.style.display = 'none', 5000)\n                })\n                .catch( () => {\n                    error2.style.display = 'block'\n                    setTimeout(() => error2.style.display = 'none', 5000)\n                })\n        }\n    }\n\n    return (\n        <div className='contact'>\n            <h1>Contact</h1>\n            <h5>You can reach me through my professional email or you can send me a message with the form below.</h5>\n            <div className='email-container'>\n                <p>My email is</p>\n                <p className='email'>lorenzodlr@lorenzodesign.io</p>\n                <img\n                    src={Copy}\n                    className='copy-icon'\n                    onClick={() => copyToClipboard()}\n                />\n                <p className='clipboard-success'>copied to clipboard!</p>\n            </div>\n            <form onSubmit={e => e.preventDefault()}>\n                <h6>Your email</h6>\n                <input type='text' />\n                <h6>Subject</h6>\n                <input type='text' />\n                <h6>Message</h6>\n                <textarea></textarea>\n                <p>*all fields are required</p>\n                <button onClick={() => handleFormSubmit()}>send</button>\n                <p className='error'>please make sure there are no empty fields</p>\n                <p className='error-2'>There was an error sending your message. Please try again.</p>\n                <p className='success'>message sent!</p>\n            </form>\n        </div>\n    )\n}\n\nexport default Contact","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Home.js",["58","59","60","61","62"],[],"import { useEffect, useState } from 'react'\nimport './Home.css'\n\nimport ArrowForward from '../chevron-forward-outline.svg'\n\nconst Home = () => {\n\n    const [anchorValue, setAnchorValue] = useState('/contact')\n\n    useEffect(() => animateLogo(), [])\n    useEffect(() => scrollFx(), [])\n    \n    const animateLogo = () => {\n        const logo = document.querySelector('.home').querySelector('.home-logo')\n        const letterContainer = logo.querySelector('.letter-container')\n        const letters = letterContainer.querySelectorAll('.letter')\n        const underlineContainer = logo.querySelector('.underline')\n        const underlines = underlineContainer.querySelectorAll('div')\n\n        const transitionIn = () => {\n            letterContainer.classList.add('animate-logo')\n            underlineContainer.classList.add('animate-underline')\n        }\n        const bounce = () => {\n            let delayVariable = 0\n\n            letters.forEach( (letter, i) => {\n                setTimeout(() => {\n                    letter.classList.add('animate-letter')\n                }, delayVariable)\n                delayVariable += 300\n            })\n            setTimeout(() => {\n                underlines[1].classList.add('animate-underline-2')\n            }, 1700)\n            setTimeout(() => {\n                underlines[1].style.backgroundColor = 'rgb(18, 97, 28)'\n            }, 3400)\n        }\n\n        if ( !sessionStorage.getItem('initial_load') ) {\n            transitionIn()\n            setTimeout(() => bounce(), 500)\n            sessionStorage.setItem('initial_load', '1')\n        } else {\n            letterContainer.style.opacity = '1'\n            letterContainer.classList.remove('animate-logo')\n            underlineContainer.classList.remove('animate-underline')\n            letters.forEach( letter => letter.classList.remove('animate-letter') )\n            underlines[1].classList.add('animate-underline-2')\n            setTimeout(() => {\n                underlines[1].style.backgroundColor = 'rgb(18, 97, 28)'\n            }, 1700)\n        }\n    }\n    const scrollFx = () => {\n        const node = document.querySelector('.home').querySelector('.btn-container')\n        const anchorRefs = node.querySelectorAll('.anchor-ref')\n\n        const activeFontSize = '20px'\n        const inActiveFontSize = '16px'\n\n        let top = 0\n\n        const adjustPosition = position => anchorRefs.forEach( anchor => {\n            anchorRefs.forEach( anchor => {\n                anchor.classList.remove('active')\n                anchor.style.top = position\n            })\n            if ( position === '24px' ) {\n                anchorRefs[0].classList.add('active')\n                setAnchorValue('/portfolio')\n            } else if ( position === '0px' ) {\n                anchorRefs[1].classList.add('active')\n                setAnchorValue('/contact')\n            } else if ( position === '-24px' ) {\n                anchorRefs[2].classList.add('active')\n                setAnchorValue('/about')\n            }\n        })\n\n        node.onwheel = e => {\n            if ( e.deltaY > 0 && top <= 16 ) top += 8\n            else if ( e.deltaY < 0 && top >= -16) top -= 8\n            adjustPosition(`${top}px`)\n            if ( top >= 16 ) setAnchorValue('/portfolio')\n            else if ( top < 16 && top > -16 ) setAnchorValue('/contact')\n            else if ( top >= -16 ) setAnchorValue('/about')\n        }\n        anchorRefs[0].onclick = () => adjustPosition('24px')\n        anchorRefs[1].onclick = () => adjustPosition('0px')\n        anchorRefs[2].onclick = () => adjustPosition('-24px')\n    }\n    \n    return (\n        <div className='home'>\n            <div className='home-logo'>\n                <div className='letter-container'>\n                    <h3 className='letter'>l</h3>\n                    <h3 className='letter'>o</h3>\n                    <h3 className='letter'>r</h3>\n                    <h3 className='letter'>e</h3>\n                    <h3 className='letter'>n</h3>\n                    <h3 className='letter'>z</h3>\n                    <h3 className='letter'>o</h3>\n                </div>\n                <div className='underline'>\n                    <div className='line-1' />\n                    <div className='line-2' />\n                </div>\n            </div>\n            <div className='home-content'>\n                <h1>What can I help you with?</h1>\n                <div className='btn-container'>\n                    <a className='anchor-ref'>I'd like to see your work</a>\n                    <a className='anchor-ref active'>I want to tell you about my project. Can you do it?</a>\n                    <a className='anchor-ref'>I'd like to know a little more about you</a>\n                </div>\n                <a href={anchorValue} className='submit-anchor'>let's go\n                    <img \n                        src={ArrowForward}\n                        alt='arrow forward'\n                    />\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js",["63","64","65","66","67","68","69","70","71","72","73","74","75"],[],"import './Portfolio.css'\nimport React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport { images } from './imagesData'\n\nconst hex1 = \"😅\".codePointAt(0).toString(16)\nconst smilingFaceWithOpenMouth = String.fromCodePoint(`0x${hex1}`)\nconst hex2 = \"😭\".codePointAt(0).toString(16)\nconst loudlyCryingFace = String.fromCodePoint(`0x${hex2}`)\n\nconst Work = props => {\n\n    const [title] = useState(props.title)\n    const [link] = useState(props.link)\n    const [description] = useState(props.description)\n\n    const [slidesLoading, setSlidesLoading] = useState(props.slidesLoading)\n    const [activeImg, setActiveImg] = useState(props.coverImg)\n    const [previousImg, setPreviousImg] = useState(props.previousImg)\n\n    return (\n        <div>\n            <div className='img-container'>\n                {/* {slidesLoading && <div className='loading-animation'>\n                    <div className='loading-dot' />\n                    <div className='loading-dot' />\n                    <div className='loading-dot' />\n                </div>}\n                {!slidesLoading && activeImg}\n                {!slidesLoading && previousImg} */}\n                {activeImg}\n            </div>\n            <h2>{title}</h2>\n            <a\n                href={`https://${link}`}\n                target='__blank'\n            >{link}</a>\n            <p>{description}</p>\n        </div>\n    )\n}\n\nconst Portfolio = () => {\n\n    const [activeWork, setActiveWork] = useState(images[0]) // sets initial work slideshow\n    const [timer, setTimer] = useState(5)\n    const [activeImgIdx, setActiveImgIdx] = useState(0)\n    const [slidesLoading, setSlidesLoading] = useState(false)\n    const [imageSlides, setImageSlides] = useState()\n    const [activeImg, setActiveImg] = useState()\n    const [previousImg, setPreviousImg] = useState()\n\n    useEffect( () => addScrollEffect(), [] )\n    // useEffect( () => handleTimer(), [])\n    //useEffect( () => slidesLoading && addLoadingAnimation(), [slidesLoading] )\n    // useEffect( () => renderImages(), [activeWork])\n    // useEffect( () => imageSlides && setActiveImg(imageSlides[0]), [imageSlides] ) // sets initial slide\n    // useEffect( () => implementSlideshow(), [timer] ) // function to change index\n    // useEffect( () => {\n    //     if ( imageSlides && previousImg ) addSlideshowAnimation()\n    // }, [activeImg])\n\n    /* currently fixing slideshow animation */\n\n    const addLoadingAnimation = () => {\n        const node = document.querySelector('.portfolio').querySelector('.img-container')\n        const ellipsis = node.querySelectorAll('.loading-dot')\n\n        ellipsis[0].classList.add('bounce')\n        setTimeout(() => ellipsis[1].classList.add('bounce'), 667)\n        setTimeout(() => ellipsis[2].classList.add('bounce'), 1333)\n    }\n    const renderImages = () => {\n        setSlidesLoading(true)\n\n        const imgArr = activeWork.map( src => \n            <img\n                src={src}\n                alt='roadarlo website' \n                className='slideshow-img'\n            />)\n        \n        setImageSlides([...imgArr])\n        setSlidesLoading(false)\n    } \n    const implementSlideshow = () => {\n        const nextIndex = activeImgIdx === activeWork.length - 1 ?\n            0 :\n            activeImgIdx + 1\n        const previousIndex = activeImgIdx\n\n        if ( timer === 1 ) {\n            setActiveImgIdx( nextIndex )\n            setActiveImg( imageSlides[nextIndex] )\n            setPreviousImg( imageSlides[previousIndex] )\n        }\n    }\n    const addSlideshowAnimation = () => {\n        const node = document.querySelector('.portfolio').querySelector('.active-container')\n        const imgs = node.querySelector('.img-container').querySelectorAll('img')\n\n        if ( imgs[1] ) imgs[1].style.position = 'absolute'\n        imgs[0].classList.remove('slide-img-in-right')\n        imgs[1].classList.remove('slide-img-out-left')\n        imgs[0].classList.remove('slide-img-in-left')\n        imgs[1].classList.remove('slide-img-out-right')\n            \n        setTimeout( () => { // gives time to transition\n            imgs[0].classList.add('slide-img-in-right')\n            imgs[1].classList.add('slide-img-out-left')\n        }, 1)\n    }\n    const handleTimer = () => {\n        let intervalTimer = timer\n        setInterval( () => {\n            intervalTimer = intervalTimer === 1 ? \n                5 :\n                intervalTimer - 1\n            setTimer( intervalTimer )\n        }, 1000)\n\n    }\n    const addScrollEffect = () => {\n        const node = document.querySelector('.App')\n        const works = node.querySelector('.portfolio-container').querySelectorAll('.work-container')\n        \n        node.onwheel = () => {\n            const appHeight = (node.clientHeight - window.innerHeight)\n            const scrollPercent = (window.pageYOffset / appHeight) * 100\n            const workPercent = 100 / works.length\n\n            // minus 0.1 to ensure that the index never reaches \n            const scrollBehaviour = scrollPercent < 100 ?\n                scrollPercent / workPercent :\n                scrollPercent / workPercent - 0.1 // ensures value never reaches undefined index \n            const index = (scrollBehaviour >= 0 && scrollBehaviour <= works.length - 1) ? \n                Math.floor( scrollBehaviour ) :\n                works.length - 1 // ensures index is always in bounds\n\n            works.forEach( work => work.classList.remove('active-container') )\n\n            works[index].classList.add('active-container')\n            setActiveWork( images[index] )\n        }\n    }\n\n    return (\n        <div className='portfolio'>\n            <h3>I don't have a lot, but it's something!</h3>\n            <div className='portfolio-container'>\n                <div className='active-container work-container'>\n                    <Work \n                        activeWork={activeWork}\n                        title={'RoadArlo'}\n                        link={'roadarlo-client.herokuapp.com'}\n                        description={`My very first full-stack application. This project was based off of an idea I had and it's still in the working prototype stage. The look is very basic(it was my first website... give me a break ${smilingFaceWithOpenMouth}), but I'm proud of the back-end work I did for this one.`}\n                        coverImg={<img src={images[0][0]} alt='RoadArlo cover img' className='cover-img' />}\n                    />\n                </div>\n                <div className='work-container'>\n                    <Work \n                        activeWork={activeWork}\n                        title={'RoadArlo Vendor Dashboard'}\n                        link={'roadarlo-vdb.herokuapp.com'}\n                        description={`This is where most of the information in roadarlo.com comes from. There is a lot going on here in terms of data management and it's where the back-end, which roadarlo.com shares, really shines... Yup, this took a while to have up and running, aaaaand it's still in development ${loudlyCryingFace}`}\n                        coverImg={<img src={images[1][0]} alt='vendor dashboard cover img' className='cover-img' />}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio",["76","77"],"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/imagesData.js",[],[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":3,"nodeType":"84","messageId":"85","endLine":6,"endColumn":11},{"ruleId":"82","severity":1,"message":"86","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":19},{"ruleId":"82","severity":1,"message":"87","line":8,"column":21,"nodeType":"84","messageId":"85","endLine":8,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":57,"column":13,"nodeType":"90","endLine":60,"endColumn":15},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"88","severity":1,"message":"89","line":60,"column":17,"nodeType":"90","endLine":64,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":60,"column":15,"nodeType":"84","messageId":"85","endLine":60,"endColumn":29},{"ruleId":"82","severity":1,"message":"94","line":61,"column":15,"nodeType":"84","messageId":"85","endLine":61,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":115,"column":21,"nodeType":"90","endLine":115,"endColumn":47},{"ruleId":"95","severity":1,"message":"96","line":116,"column":21,"nodeType":"90","endLine":116,"endColumn":54},{"ruleId":"95","severity":1,"message":"96","line":117,"column":21,"nodeType":"90","endLine":117,"endColumn":47},{"ruleId":"82","severity":1,"message":"97","line":20,"column":12,"nodeType":"84","messageId":"85","endLine":20,"endColumn":25},{"ruleId":"82","severity":1,"message":"98","line":20,"column":27,"nodeType":"84","messageId":"85","endLine":20,"endColumn":43},{"ruleId":"82","severity":1,"message":"99","line":21,"column":23,"nodeType":"84","messageId":"85","endLine":21,"endColumn":35},{"ruleId":"82","severity":1,"message":"100","line":22,"column":12,"nodeType":"84","messageId":"85","endLine":22,"endColumn":23},{"ruleId":"82","severity":1,"message":"101","line":22,"column":25,"nodeType":"84","messageId":"85","endLine":22,"endColumn":39},{"ruleId":"82","severity":1,"message":"97","line":51,"column":12,"nodeType":"84","messageId":"85","endLine":51,"endColumn":25},{"ruleId":"82","severity":1,"message":"102","line":53,"column":12,"nodeType":"84","messageId":"85","endLine":53,"endColumn":21},{"ruleId":"82","severity":1,"message":"100","line":54,"column":12,"nodeType":"84","messageId":"85","endLine":54,"endColumn":23},{"ruleId":"82","severity":1,"message":"103","line":68,"column":11,"nodeType":"84","messageId":"85","endLine":68,"endColumn":30},{"ruleId":"82","severity":1,"message":"104","line":76,"column":11,"nodeType":"84","messageId":"85","endLine":76,"endColumn":23},{"ruleId":"82","severity":1,"message":"105","line":89,"column":11,"nodeType":"84","messageId":"85","endLine":89,"endColumn":29},{"ruleId":"82","severity":1,"message":"106","line":101,"column":11,"nodeType":"84","messageId":"85","endLine":101,"endColumn":32},{"ruleId":"82","severity":1,"message":"107","line":116,"column":11,"nodeType":"84","messageId":"85","endLine":116,"endColumn":22},{"ruleId":"78","replacedBy":"108"},{"ruleId":"80","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["110"],["111"],"'activeFontSize' is assigned a value but never used.","'inActiveFontSize' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'slidesLoading' is assigned a value but never used.","'setSlidesLoading' is assigned a value but never used.","'setActiveImg' is assigned a value but never used.","'previousImg' is assigned a value but never used.","'setPreviousImg' is assigned a value but never used.","'activeImg' is assigned a value but never used.","'addLoadingAnimation' is assigned a value but never used.","'renderImages' is assigned a value but never used.","'implementSlideshow' is assigned a value but never used.","'addSlideshowAnimation' is assigned a value but never used.","'handleTimer' is assigned a value but never used.",["110"],["111"],"no-global-assign","no-unsafe-negation"]
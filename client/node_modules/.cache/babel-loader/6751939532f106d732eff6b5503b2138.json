{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './Portfolio.css';\nimport React, { useState, useEffect } from 'react';\nimport { images } from './imagesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hex = \"ðŸ˜…\".codePointAt(0).toString(16);\nconst emoji = String.fromCodePoint(`0x${hex}`);\n\nconst Work = props => {\n  _s();\n\n  const [timer, setTimer] = useState(5);\n  const [activeWork, setActiveWork] = useState(props.activeWork);\n  const [activeImgIdx, setActiveImgIdx] = useState(0);\n  const [slidesLoading, setSlidesLoading] = useState(false);\n  const [imageSlides, setImageSlides] = useState();\n  const [activeImg, setActiveImg] = useState();\n  const [previousImg, setPreviousImg] = useState();\n  const [slideshowEnabled, setSlideshowEnabled] = useState(true);\n  const [title] = useState(props.title);\n  const [link] = useState(props.link);\n  const [description] = useState(props.description);\n  const [isActiveWork, setIsActiveWork] = useState(props.active);\n  useEffect(() => setIsActiveWork(props.active), [props.active]);\n  useEffect(() => setActiveWork(props.activeWork), [props.activeWork]);\n  useEffect(() => handleTimer(), []);\n  useEffect(() => slidesLoading && addLoadingAnimation(), [slidesLoading]);\n  useEffect(() => renderImages(), [activeWork]);\n  useEffect(() => imageSlides && setActiveImg(imageSlides[0]), [imageSlides]); // sets initial slide\n\n  useEffect(() => implementSlideshow(), [timer]); // function to change index\n\n  useEffect(() => {\n    if (imageSlides && previousImg) addSlideshowAnimation();\n  }, [activeImg]);\n\n  const handleTimer = action => {\n    let intervalTimer = timer;\n    setInterval(() => {\n      intervalTimer = intervalTimer === 1 ? 5 : intervalTimer - 1;\n      setTimer(intervalTimer);\n    }, 1000);\n  };\n\n  const addLoadingAnimation = () => {\n    const node = document.querySelector('.portfolio').querySelector('.img-container');\n    const ellipsis = node.querySelectorAll('.loading-dot');\n    ellipsis[0].classList.add('bounce');\n    setTimeout(() => ellipsis[1].classList.add('bounce'), 667);\n    setTimeout(() => ellipsis[2].classList.add('bounce'), 1333);\n  };\n\n  const renderImages = async () => {\n    setSlidesLoading(true);\n    const imgArr = activeWork.map(src => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: \"roadarlo website\",\n      className: \"slideshow-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this));\n    setImageSlides([...imgArr]);\n    setSlidesLoading(false);\n  };\n\n  const implementSlideshow = () => {\n    const nextIndex = activeImgIdx === activeWork.length - 1 ? 0 : activeImgIdx + 1;\n    const previousIndex = activeImgIdx;\n\n    if (slideshowEnabled && timer === 1) {\n      setActiveImgIdx(nextIndex);\n      setActiveImg(imageSlides[nextIndex]);\n      setPreviousImg(imageSlides[previousIndex]);\n    }\n  };\n\n  const addSlideshowAnimation = () => {\n    const node = document.querySelector('.portfolio').querySelector('.active-container');\n    const imgs = node.querySelector('.img-container').querySelectorAll('img');\n    if (imgs[1]) imgs[1].style.position = 'absolute';\n    imgs[0].classList.remove('slide-img-in-right');\n    imgs[1].classList.remove('slide-img-out-left');\n    imgs[0].classList.remove('slide-img-in-left');\n    imgs[1].classList.remove('slide-img-out-right');\n    setTimeout(() => {\n      // gives time to transition\n      imgs[0].classList.add('slide-img-in-right');\n      imgs[1].classList.add('slide-img-out-left');\n    }, 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isActiveWork ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: [slidesLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 43\n        }, this), !slidesLoading && activeImg, !slidesLoading && previousImg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://${link}`,\n        target: \"__blank\",\n        children: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.coverImg,\n          alt: \"portfolio website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://${link}`,\n        target: \"__blank\",\n        children: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Work, \"MuCvwadVHNBF3ocHzWHOfPX6Dts=\");\n\n_c = Work;\n\nconst Portfolio = () => {\n  _s2();\n\n  const [activeWork, setActiveWork] = useState(images[0]); // sets initial work slideshow\n\n  useEffect(() => addScrollEffect(), []);\n\n  const addScrollEffect = () => {\n    const node = document.querySelector('.App');\n    const works = node.querySelector('.portfolio-container').querySelectorAll('.work-container');\n\n    node.onwheel = () => {\n      const appHeight = node.clientHeight - window.innerHeight;\n      const scrollPercent = window.pageYOffset / appHeight * 100;\n      const workPercent = 100 / works.length; // minus 0.1 to ensure that the index never reaches \n\n      const scrollBehaviour = scrollPercent < 100 ? scrollPercent / workPercent : scrollPercent / workPercent - 0.1; // ensures value never reaches undefined index \n\n      const index = scrollBehaviour >= 0 && scrollBehaviour <= works.length - 1 ? Math.floor(scrollBehaviour) : 0; // ensures index is always in bounds\n\n      works.forEach(work => work.classList.remove('active-container'));\n      works[index].classList.add('active-container');\n      setActiveWork(images[index]);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"I don't have a lot, but it's something!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-container work-container\",\n        children: /*#__PURE__*/_jsxDEV(Work, {\n          active: false,\n          activeWork: activeWork,\n          title: 'RoadArlo',\n          link: 'roadarlo-client.herokuapp.com',\n          description: `My very first full-stack application. This project was based off of an idea I had and it's still in the working prototype stage. The look is very basic(it was my first website... give me a break ${emoji}), but I'm proud of the back-end work I did for this one.`,\n          coverImg: images[0][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Portfolio, \"IzGI0kxo1EwAuqXn+9lv56eyM7U=\");\n\n_c2 = Portfolio;\nexport default Portfolio;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Work\");\n$RefreshReg$(_c2, \"Portfolio\");","map":{"version":3,"sources":["/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js"],"names":["React","useState","useEffect","images","hex","codePointAt","toString","emoji","String","fromCodePoint","Work","props","timer","setTimer","activeWork","setActiveWork","activeImgIdx","setActiveImgIdx","slidesLoading","setSlidesLoading","imageSlides","setImageSlides","activeImg","setActiveImg","previousImg","setPreviousImg","slideshowEnabled","setSlideshowEnabled","title","link","description","isActiveWork","setIsActiveWork","active","handleTimer","addLoadingAnimation","renderImages","implementSlideshow","addSlideshowAnimation","action","intervalTimer","setInterval","node","document","querySelector","ellipsis","querySelectorAll","classList","add","setTimeout","imgArr","map","src","nextIndex","length","previousIndex","imgs","style","position","remove","coverImg","Portfolio","addScrollEffect","works","onwheel","appHeight","clientHeight","window","innerHeight","scrollPercent","pageYOffset","workPercent","scrollBehaviour","index","Math","floor","forEach","work"],"mappings":"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","sourcesContent":["import './Portfolio.css'\nimport React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport { images } from './imagesData'\n\nconst hex = \"ðŸ˜…\".codePointAt(0).toString(16)\nconst emoji = String.fromCodePoint(`0x${hex}`)\n\nconst Work = props => {\n\n    const [timer, setTimer] = useState(5)\n    const [activeWork, setActiveWork] = useState(props.activeWork)\n    const [activeImgIdx, setActiveImgIdx] = useState(0)\n    const [slidesLoading, setSlidesLoading] = useState(false)\n    const [imageSlides, setImageSlides] = useState()\n    const [activeImg, setActiveImg] = useState()\n    const [previousImg, setPreviousImg] = useState()\n    const [slideshowEnabled, setSlideshowEnabled] = useState(true)\n    const [title] = useState(props.title)\n    const [link] = useState(props.link)\n    const [description] = useState(props.description)\n\n    const [isActiveWork, setIsActiveWork] = useState(props.active)\n\n    useEffect( () => setIsActiveWork( props.active ), [props.active] )\n    useEffect( () => setActiveWork(props.activeWork), [props.activeWork])\n    useEffect( () => handleTimer(), [])\n    useEffect( () => slidesLoading && addLoadingAnimation(), [slidesLoading] )\n    useEffect( () => renderImages(), [activeWork])\n    useEffect( () => imageSlides && setActiveImg(imageSlides[0]), [imageSlides] ) // sets initial slide\n    useEffect( () => implementSlideshow(), [timer] ) // function to change index\n    useEffect( () => {\n        if ( imageSlides && previousImg ) addSlideshowAnimation()\n    }, [activeImg])\n\n    const handleTimer = action => {\n        let intervalTimer = timer\n        \n        setInterval( () => {\n            intervalTimer = intervalTimer === 1 ? \n                5 :\n                intervalTimer - 1\n            setTimer( intervalTimer )\n        }, 1000)\n    }\n    const addLoadingAnimation = () => {\n        const node = document.querySelector('.portfolio').querySelector('.img-container')\n        const ellipsis = node.querySelectorAll('.loading-dot')\n\n        ellipsis[0].classList.add('bounce')\n        setTimeout(() => ellipsis[1].classList.add('bounce'), 667)\n        setTimeout(() => ellipsis[2].classList.add('bounce'), 1333)\n    }\n    const renderImages = async () => {\n        setSlidesLoading(true)\n\n        const imgArr = activeWork.map( src => \n            <img\n                src={src}\n                alt='roadarlo website' \n                className='slideshow-img'\n            />)\n        \n        setImageSlides([...imgArr])\n        setSlidesLoading(false)\n    } \n    const implementSlideshow = () => {\n        const nextIndex = activeImgIdx === activeWork.length - 1 ?\n            0 :\n            activeImgIdx + 1\n        const previousIndex = activeImgIdx\n\n        if ( slideshowEnabled && timer === 1 ) {\n            setActiveImgIdx( nextIndex )\n            setActiveImg( imageSlides[nextIndex] )\n            setPreviousImg( imageSlides[previousIndex] )\n        }\n    }\n    const addSlideshowAnimation = () => {\n        const node = document.querySelector('.portfolio').querySelector('.active-container')\n        const imgs = node.querySelector('.img-container').querySelectorAll('img')\n\n        if ( imgs[1] ) imgs[1].style.position = 'absolute'\n        imgs[0].classList.remove('slide-img-in-right')\n        imgs[1].classList.remove('slide-img-out-left')\n        imgs[0].classList.remove('slide-img-in-left')\n        imgs[1].classList.remove('slide-img-out-right')\n            \n        setTimeout( () => { // gives time to transition\n            imgs[0].classList.add('slide-img-in-right')\n            imgs[1].classList.add('slide-img-out-left')\n        }, 1)\n    }\n\n    return (\n        <div>\n            { isActiveWork ?\n                <div>\n                    <div className='img-container'>\n                        {slidesLoading && <div className='loading-animation'>\n                            <div className='loading-dot' />\n                            <div className='loading-dot' />\n                            <div className='loading-dot' />\n                        </div>}\n                        {!slidesLoading && activeImg}\n                        {!slidesLoading && previousImg}\n                    </div>\n                    <h2>{title}</h2>\n                    <a\n                        href={`https://${link}`}\n                        target='__blank'\n                    >{link}</a>\n                    <p>{description}</p>\n                </div> :\n                <div>\n                    <div className='img-container'>\n                        <img\n                            src={props.coverImg}\n                            alt='portfolio website'\n                        />\n                    </div>\n                    <h2>{title}</h2>\n                    <a\n                        href={`https://${link}`}\n                        target='__blank'\n                    >{link}</a>\n                    <p>{description}</p>\n                </div>\n            }\n        </div>\n    )\n}\n\nconst Portfolio = () => {\n\n    const [activeWork, setActiveWork] = useState(images[0]) // sets initial work slideshow\n\n    useEffect( () => addScrollEffect(), [] )\n\n    \n    const addScrollEffect = () => {\n        const node = document.querySelector('.App')\n        const works = node.querySelector('.portfolio-container').querySelectorAll('.work-container')\n        \n        node.onwheel = () => {\n            const appHeight = (node.clientHeight - window.innerHeight)\n            const scrollPercent = (window.pageYOffset / appHeight) * 100\n            const workPercent = 100 / works.length\n\n            // minus 0.1 to ensure that the index never reaches \n            const scrollBehaviour = scrollPercent < 100 ?\n                scrollPercent / workPercent :\n                scrollPercent / workPercent - 0.1 // ensures value never reaches undefined index \n            const index = (scrollBehaviour >= 0 && scrollBehaviour <= works.length - 1) ? \n                Math.floor( scrollBehaviour ) :\n                0 // ensures index is always in bounds\n\n            works.forEach( work => work.classList.remove('active-container') )\n\n            works[index].classList.add('active-container')\n            setActiveWork( images[index] )\n        }\n    }\n\n    return (\n        <div className='portfolio'>\n            <h3>I don't have a lot, but it's something!</h3>\n            <div className='portfolio-container'>\n                <div className='active-container work-container'>\n                    <Work \n                        active={false}\n                        activeWork={activeWork}\n                        title={'RoadArlo'}\n                        link={'roadarlo-client.herokuapp.com'}\n                        description={`My very first full-stack application. This project was based off of an idea I had and it's still in the working prototype stage. The look is very basic(it was my first website... give me a break ${emoji}), but I'm proud of the back-end work I did for this one.`}\n                        coverImg={images[0][0]}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}
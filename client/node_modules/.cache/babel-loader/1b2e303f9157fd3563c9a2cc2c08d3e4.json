{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js\",\n    _s = $RefreshSig$();\n\nimport './Portfolio.css';\nimport React, { useState, useEffect } from 'react';\nimport { images } from './imagesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [timer, setTime] = useState(1);\n  const [activeWork, setActiveWork] = useState(images[0]); // sets initial work slideshow\n\n  const [activeImgIdx, setActiveImgIdx] = useState(0);\n  const [activeImg, setActiveImg] = useState( /*#__PURE__*/_jsxDEV(\"img\", {\n    src: images[0][0],\n    alt: \"roadarlo website\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 49\n  }, this)); // sets initial image value\n\n  const [nextImg, setNextImg] = useState(0);\n  useEffect(() => setTimeState(), [activeImgIdx]); // resets time state whenever image changes\n\n  useEffect(() => {\n    const img = /*#__PURE__*/React.createElement('img', {\n      src: images[0][1],\n      alt: 'roadarlo website'\n    });\n    setTimeout(() => setActiveImg(img), 1000);\n  }, []);\n\n  const setTimeState = () => {\n    setTime(1);\n    setTimeout(() => setTime(0), 3000); // sets the timer for 3s\n  };\n\n  const addSlideFx = async () => {\n    /* const node = document.querySelector('.portfolio').querySelector('.active-container')\n    const images = node.querySelectorAll('img')\n    const nextImg = new Image()\n    const nextIdx = activeImgIdx === activeWork.length - 1 ?\n        0 : \n        activeImgIdx + 1\n    \n    nextImg.src = activeWork[nextIdx]\n    nextImg.alt = 'roadarlo website'\n    nextImg.onloadend = () => setNextImg() */\n\n    /* new strategy: display only one image, and pre-load the image before transitions */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"I don't have a lot, but it's something!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: activeImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Portfolio, \"P7CnFyUbdDT+vCGL9bZly6EO72U=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Porfolio.js"],"names":["React","useState","useEffect","images","Portfolio","timer","setTime","activeWork","setActiveWork","activeImgIdx","setActiveImgIdx","activeImg","setActiveImg","nextImg","setNextImg","setTimeState","img","createElement","src","alt","setTimeout","addSlideFx"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAKA,SAASC,MAAT,QAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACE,MAAM,CAAC,CAAD,CAAP,CAA5C,CAHoB,CAGoC;;AACxD,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,eAAE;AACxC,IAAA,GAAG,EAAEE,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CADmC;AAExC,IAAA,GAAG,EAAC;AAFoC;AAAA;AAAA;AAAA;AAAA,UAAF,CAA1C,CALoB,CAQhB;;AACJ,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAMa,YAAY,EAAnB,EAAuB,CAACN,YAAD,CAAvB,CAAT,CAXoB,CAW4B;;AAEhDP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,GAAG,gBAAGhB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AACnCC,MAAAA,GAAG,EAAEf,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAD8B;AAEnCgB,MAAAA,GAAG,EAAE;AAF8B,KAA3B,CAAZ;AAIAC,IAAAA,UAAU,CAAC,MAAMR,YAAY,CAACI,GAAD,CAAnB,EAA0B,IAA1B,CAAV;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMD,YAAY,GAAG,MAAM;AACvBT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAc,IAAAA,UAAU,CAAC,MAAMd,OAAO,CAAC,CAAD,CAAd,EAAmB,IAAnB,CAAV,CAFuB,CAEY;AACtC,GAHD;;AAIA,QAAMe,UAAU,GAAG,YAAY;AAE3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKV;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvDD;;GAAMP,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import './Portfolio.css'\nimport React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport { images } from './imagesData'\n\nconst Portfolio = () => {\n\n    const [timer, setTime] = useState(1)\n    const [activeWork, setActiveWork] = useState(images[0]) // sets initial work slideshow\n    const [activeImgIdx, setActiveImgIdx] = useState(0)\n    const [activeImg, setActiveImg] = useState( <img \n        src={images[0][0]} \n        alt='roadarlo website' \n    />) // sets initial image value\n    const [nextImg, setNextImg] = useState(0)\n\n    useEffect(() => setTimeState(), [activeImgIdx]) // resets time state whenever image changes\n\n    useEffect(() => {\n        const img = React.createElement('img', {\n            src: images[0][1],\n            alt: 'roadarlo website'\n        })\n        setTimeout(() => setActiveImg(img), 1000)\n    }, [])\n\n    const setTimeState = () => {\n        setTime(1)\n        setTimeout(() => setTime(0), 3000) // sets the timer for 3s\n    }\n    const addSlideFx = async () => {\n\n        /* const node = document.querySelector('.portfolio').querySelector('.active-container')\n        const images = node.querySelectorAll('img')\n        const nextImg = new Image()\n        const nextIdx = activeImgIdx === activeWork.length - 1 ?\n            0 : \n            activeImgIdx + 1\n        \n        nextImg.src = activeWork[nextIdx]\n        nextImg.alt = 'roadarlo website'\n        nextImg.onloadend = () => setNextImg() */\n\n        /* new strategy: display only one image, and pre-load the image before transitions */\n    }\n\n    return (\n        <div className='portfolio'>\n            <h3>I don't have a lot, but it's something!</h3>\n            <div className='active-container'>\n                <div className='img-container'>\n                    {activeImg}\n                    {/* <img\n                        src={nextImg}\n                        className='next-img'\n                    /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Contact.js\";\nimport './Contact.css';\nimport Copy from '../copy-outline.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = props => {\n  const apiUrl = 'https://lorenzo-api.herokuapp.com';\n\n  const copyToClipboard = () => {\n    const email = document.querySelector('.contact').querySelector('.email');\n    const success = document.querySelector('.contact').querySelector('.clipboard-success');\n    navigator.clipboard.writeText(email.innerHTML);\n    success.classList.add('slideFromTop');\n    setTimeout(() => success.classList.remove('slideFromTop'), 5001);\n  };\n\n  const handleFormSubmit = () => {\n    const masterNode = document.querySelector('.contact').querySelector('form');\n    const email = masterNode.querySelectorAll('input')[0].value;\n    const subject = masterNode.querySelectorAll('input')[1].value;\n    const message = masterNode.querySelector('textarea').value;\n    const error = masterNode.querySelector('.error');\n    const error2 = masterNode.querySelector('.error-2');\n    const success = masterNode.querySelector('.success');\n\n    if (!email || !subject || !message) {\n      error.style.display = 'block';\n      setTimeout(() => error.style.display = 'none', 5000);\n    } else {\n      fetch(`${apiUrl}/client/client-inquiry`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          sender: email,\n          subject: subject,\n          body: message\n        })\n      }).then(() => {\n        success.style.display = 'block';\n        masterNode.reset();\n        setTimeout(() => success.style.display = 'none', 5000);\n      }).catch(() => {\n        error2.style.display = 'block';\n        setTimeout(() => error2.style.display = 'none', 5000);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You can reach me through my professional email or you can send me a message with the form below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"My email is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"email\",\n        children: \"lorenzodlr@lorenzodesign.io\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Copy,\n        className: \"copy-icon\",\n        onClick: () => copyToClipboard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"clipboard-success\",\n        children: \"copied to clipboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"*all fields are required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFormSubmit(),\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"please make sure there are no empty fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-2\",\n        children: \"There was an error sending your message. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: \"message sent!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/lorenzodelosreyes/AllDocuments/web-development/main-personal-website/src/components/Contact.js"],"names":["Copy","Contact","props","apiUrl","copyToClipboard","email","document","querySelector","success","navigator","clipboard","writeText","innerHTML","classList","add","setTimeout","remove","handleFormSubmit","masterNode","querySelectorAll","value","subject","message","error","error2","style","display","fetch","method","headers","mode","body","JSON","stringify","sender","then","reset","catch","e","preventDefault"],"mappings":"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","sourcesContent":["import './Contact.css'\nimport Copy from '../copy-outline.svg'\n\nconst Contact = props => {\n\n    const apiUrl = 'https://lorenzo-api.herokuapp.com'\n\n    const copyToClipboard = () => {\n        const email = document.querySelector('.contact').querySelector('.email')\n        const success = document.querySelector('.contact').querySelector('.clipboard-success')\n\n        navigator.clipboard.writeText(email.innerHTML)\n        success.classList.add('slideFromTop')\n        setTimeout(() => success.classList.remove('slideFromTop'), 5001)\n    }\n    const handleFormSubmit = () => {\n        const masterNode = document.querySelector('.contact').querySelector('form')\n        const email = masterNode.querySelectorAll('input')[0].value\n        const subject = masterNode.querySelectorAll('input')[1].value\n        const message = masterNode.querySelector('textarea').value\n        const error = masterNode.querySelector('.error')\n        const error2 = masterNode.querySelector('.error-2')\n        const success = masterNode.querySelector('.success')\n\n        if ( !email || !subject || !message ) {\n            error.style.display = 'block'\n            setTimeout(() => error.style.display = 'none', 5000)\n        } else {\n            fetch(`${apiUrl}/client/client-inquiry`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                mode: 'cors',\n                body: JSON.stringify({\n                    sender: email,\n                    subject: subject,\n                    body: message\n                })\n            })\n                .then( () => {\n                    success.style.display = 'block'\n                    masterNode.reset()\n                    setTimeout(() => success.style.display = 'none', 5000)\n                })\n                .catch( () => {\n                    error2.style.display = 'block'\n                    setTimeout(() => error2.style.display = 'none', 5000)\n                })\n        }\n    }\n\n    return (\n        <div className='contact'>\n            <h1>Contact</h1>\n            <h5>You can reach me through my professional email or you can send me a message with the form below.</h5>\n            <div className='email-container'>\n                <p>My email is</p>\n                <p className='email'>lorenzodlr@lorenzodesign.io</p>\n                <img\n                    src={Copy}\n                    className='copy-icon'\n                    onClick={() => copyToClipboard()}\n                />\n                <p className='clipboard-success'>copied to clipboard!</p>\n            </div>\n            <form onSubmit={e => e.preventDefault()}>\n                <h6>Your email</h6>\n                <input type='text' />\n                <h6>Subject</h6>\n                <input type='text' />\n                <h6>Message</h6>\n                <textarea></textarea>\n                <p>*all fields are required</p>\n                <button onClick={() => handleFormSubmit()}>send</button>\n                <p className='error'>please make sure there are no empty fields</p>\n                <p className='error-2'>There was an error sending your message. Please try again.</p>\n                <p className='success'>message sent!</p>\n            </form>\n        </div>\n    )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}